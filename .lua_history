modem
require("modem")
exit()
modem
m = peripheral.wrap("left")
m
peripheral.find("modem")
("[%s]: %s"):format("INFO", "x")
term.setTextColor(colors.lightGray) print("hi")
term.color
term
term.isColor()
function u(t, i)
function u(t, i) if not t[i] then return end return t[i], u(t, i + 1) end
u({"a", 2, 4, "b"}, 1)
function x() return "a", 2 end
x()
"abc":upper()
("abc"):upper()
exit()
x = peripheral.find("modem")
x
x.isWireless90
x.isWireless()
exit()
os.exit()
os
ccemux
ccemux.detach
ccemux.detach()
ccemux.detach("modem")
ccemux.detach("right")
exit()
peripheral.wrap("right")
peripheral.wrap("left")
exit()
ccemux.detach("left")
exit()
x = {}
x[nil] = 3
x[nil]
??<span style="color: rgb(255, 255, 255); font-family: PFW; font-size: 16.8px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgba(0, 0, 0, 0.4); text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">can go back 
exit()
while true do print(os.pullEvent()) end
x = peripheral.wrap("left")
x.open(789)
while true do print(os.pullEvent()) end
os.startTimer(1) while true do print(os.pullEvent()) end
t
os.startTimer(1) while true do print(os.pullEvent()) end
os.clock()
x = peripheral.wrap("left")
x.open
for i = 1, 100000 do x.open(i) end
for i = 1, 100000 do x.close(i) end
for i = 1, 10000 do x.close(i) end
for i = 1, 10000 do print(i) x.open(i) end
for i = 1, 10000 do x.close(i) end
x = require("vendor.json")
x
x.decode("jidoewa")
x.decode('"jidoewa"')
x.decode('["jidoewa"]')
exit()
x = peripheral.wrap("left")
x
exit()
2^32
exit()
5 % 2^32
exit()
term.width
term.getSize()
exit()
function no() end
select("#", no())
function no() return nil end
select("#", no())
exit()
unpack
unpack({1, 2})
unpack({1, 2, 3})
unpack({1, 2, 3}, 2, 3)
exit()
os.time("utc")
os.clock("utc")
os.day()
os
os.epoch
os.epoch()
os.epoch("utc")
exit()
print("\127")
term.setTextColor(colors.lightGray) print("\127")
term.setTextColor(colors.gray) print("\127")
math.log(colors.black)/math.log(2)
math.log(colors.white)/math.log(2)
("%X"):format(15)
("%X"):format(0)
exit()
table.joi
exit()
print("\149")
term.write
write
write("i")
term.write("i")
exit()
os.pullEvent()
while true do print(os.pullEvent()) end
exit()
debug.trace
exit()
os.pullEvent()
keys.enter
os.pullEvent()
exit()
colors.white
pcall(function() return 1, 2, 3 end)
pcall(function() error("wow") end)
exit()
colors.black
2^15
exit()
colors.white
exit()
type(true)
exit()
while true do print(os.pullEvent())
while true do print(os.pullEvent()) end
